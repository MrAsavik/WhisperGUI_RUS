import customtkinter as ctk
from tkinter import filedialog, scrolledtext
from ui_utils import bind_copy  # ‚úÖ –î–æ–±–∞–≤–∏—Ç—å –∏–º–ø–æ—Ä—Ç
from log_utils import clear_log



def build_ui(app):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ç–æ—á–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è UI: —Å–æ–±–∏—Ä–∞–µ—Ç –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏ –∏ –∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã.
    """
    app.tabview = ctk.CTkTabview(app)
    app.tabview.pack(expand=True, fill='both')

    build_main_tab(app)
    build_settings_tab(app)
    build_dev_tab(app)


def build_main_tab(app):
    tab = app.tabview.add("–ì–ª–∞–≤–Ω–∞—è")

    # –í–µ—Ä—Ö–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
    ctk.CTkButton(tab, text="–û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤", command=app.clear_file_list).pack(pady=5)
    app.file_label = ctk.CTkLabel(tab, text="–§–∞–π–ª—ã –Ω–µ –≤—ã–±—Ä–∞–Ω—ã")
    app.file_label.pack(pady=10)

    # –ö–Ω–æ–ø–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    ctk.CTkButton(tab, text="–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã", command=app.select_files).pack(pady=5)
    app.process_button = ctk.CTkButton(tab, text="–†–∞—Å–ø–æ–∑–Ω–∞—Ç—å", command=app.process_files, state="disabled")
    app.process_button.pack(pady=5)
    app.stop_button = ctk.CTkButton(tab, text="–°—Ç–æ–ø", command=app.stop_process, fg_color="red", state="disabled")
    app.stop_button.pack(pady=5)

    # –ü—Ä–æ–≥—Ä–µ—Å—Å –∏ —Å—Ç–∞—Ç—É—Å
    app.progress_bar = ctk.CTkProgressBar(tab, variable=app.progress_var, width=400)
    app.progress_bar.pack(pady=10)
    app.progress_var.set(0)

    app.status_label = ctk.CTkLabel(tab, text="‚ö™ –û–∂–∏–¥–∞–Ω–∏–µ...", anchor='w')
    app.status_label.pack(pady=5)

    # –û—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥
    app.log_text_main = scrolledtext.ScrolledText(tab, wrap='word', width=80, height=10)
    app.log_text_main.pack(pady=10)
    bind_copy(app.log_text_main)

    ctk.CTkButton(tab, text="–û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥", command=lambda: clear_log(app)).pack(pady=5)




def build_settings_tab(app):
    tab = app.tabview.add("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")

    ctk.CTkLabel(tab, text="–ú–æ–¥–µ–ª—å Whisper:").pack(pady=5)
    ctk.CTkOptionMenu(tab, values=["tiny", "small", "medium", "large"], variable=app.model_var).pack()

    ctk.CTkLabel(tab, text="–Ø–∑—ã–∫:").pack(pady=5)
    ctk.CTkOptionMenu(tab, values=["Russian", "English", "Auto"], variable=app.language_var).pack()

    ctk.CTkLabel(tab, text="–§–æ—Ä–º–∞—Ç—ã –≤—ã–≤–æ–¥–∞:").pack(pady=5)
    for fmt, var in app.selected_formats.items():
        ctk.CTkCheckBox(tab, text=f"{fmt.upper()} —Ñ–æ—Ä–º–∞—Ç", variable=var).pack(anchor='w', padx=20)

    ctk.CTkButton(tab, text="–í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è", command=app.select_folder).pack(pady=10)
    ctk.CTkLabel(tab, text="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:").pack(pady=10)
    ctk.CTkCheckBox(tab, text="üåô Turbo-—Ä–µ–∂–∏–º (–Ω–æ—á–Ω–∞—è –≤—ã—Å–æ–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ CPU)", variable=app.turbo_var).pack(anchor='w', padx=20)


def build_dev_tab(app):
    tab = app.tabview.add("–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É")
    app.log_text_dev = scrolledtext.ScrolledText(tab, wrap='word', width=110, height=35)
    app.log_text_dev.pack(pady=10, padx=10, expand=True, fill='both')
    bind_copy(app.log_text_dev)