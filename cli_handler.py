import subprocess
from config import DEFAULT_MODEL, DEFAULT_LANGUAGE
from file_handler import get_output_path, save_file
from history import save_history

def process_files_cli(selected_files):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É, –∏—Å–ø–æ–ª—å–∑—É—è Whisper.
    """
    if not selected_files:
        print("–û—à–∏–±–∫–∞: –ù–µ –≤—ã–±—Ä–∞–Ω—ã —Ñ–∞–π–ª—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
        return

    for file_path in selected_files:
        print(f"üü¢ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª: {file_path}")

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã—Ö–æ–¥–Ω–æ–π –ø—É—Ç—å
        output_path = get_output_path(file_path, "txt")

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è Whisper
        whisper_args = [
            "whisper", file_path,
            "--model", DEFAULT_MODEL,
            "--language", DEFAULT_LANGUAGE,
            "--output_format", "txt"
        ]

        try:
            process = subprocess.run(whisper_args, text=True, capture_output=True)

            if process.returncode == 0:
                save_file(output_path, process.stdout)
                save_history(file_path, success=True)
                print(f"‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω: {output_path}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {file_path}: {process.stderr}")
                save_history(file_path, success=False)

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Whisper –¥–ª—è {file_path}: {e}")
            save_history(file_path, success=False)
